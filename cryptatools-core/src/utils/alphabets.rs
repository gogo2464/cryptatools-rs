use bimap::BiMap;
use once_cell::sync::Lazy;

pub const PRINTABLE: &'static str = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ!\"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~ \t\n\r\x0b\x0c";
//pub const ASCII_ALPHABET: &'static str = "\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\x0c\r\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f !\"#$%&\'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~\x7f\\u128";
pub const UU_ENCODING_ALPHABET: &'static str = " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`";


 pub static POKERED_ALPHABET: Lazy<BiMap<&'static str, Vec<u8>>> = Lazy::new(|| {
    let mut alphabet = BiMap::new();
    alphabet.insert("<NULL>", vec![0x00]);
    alphabet.insert("<PAGE>", vec![0x49]);
    alphabet.insert("<PKMN>", vec![0x4a]);

    alphabet
  }
);

pub static ASCII_ALPHABET: Lazy<BiMap<&'static str, Vec<u8>>> = Lazy::new(|| {
    let mut alphabet = BiMap::new();
    alphabet.insert("\x00", vec![0x00]);
    alphabet.insert("\x01", vec![0x01]);
    alphabet.insert("\x02", vec![0x02]);
    alphabet.insert("\x03", vec![0x03]);
    alphabet.insert("\x04", vec![0x04]);
    alphabet.insert("\x05", vec![0x05]);
    alphabet.insert("\x06", vec![0x06]);
    alphabet.insert("\x07", vec![0x07]);
    alphabet.insert("\x08", vec![0x08]);
    alphabet.insert("\x09", vec![0x09]);
    alphabet.insert("\x0a", vec![0x0a]);
    alphabet.insert("\x0b", vec![0x0b]);
    alphabet.insert("\x0c", vec![0x0c]);
    alphabet.insert("\x0d", vec![0x0d]);
    alphabet.insert("\x0e", vec![0x0e]);
    alphabet.insert("\x0f", vec![0x0f]);
    alphabet.insert("\x10", vec![0x10]);
    alphabet.insert("\x11", vec![0x11]);
    alphabet.insert("\x12", vec![0x12]);
    alphabet.insert("\x13", vec![0x13]);
    alphabet.insert("\x14", vec![0x14]);
    alphabet.insert("\x15", vec![0x15]);
    alphabet.insert("\x16", vec![0x16]);
    alphabet.insert("\x17", vec![0x17]);
    alphabet.insert("\x18", vec![0x18]);
    alphabet.insert("\x19", vec![0x19]);
    alphabet.insert("\x1a", vec![0x1a]);
    alphabet.insert("\x1b", vec![0x1b]);
    alphabet.insert("\x1c", vec![0x1c]);
    alphabet.insert("\x1d", vec![0x1d]);
    alphabet.insert("\x1e", vec![0x1e]);
    alphabet.insert("\x1f", vec![0x1f]);
    alphabet.insert(" ", vec![0x20]);
    alphabet.insert("!", vec![0x21]);
    alphabet.insert("\"", vec![0x22]);
    alphabet.insert("#", vec![0x23]);
    alphabet.insert("$", vec![0x24]);
    alphabet.insert("%", vec![0x25]);
    alphabet.insert("&", vec![0x26]);
    alphabet.insert("'", vec![0x27]);
    alphabet.insert("(", vec![0x28]);
    alphabet.insert(")", vec![0x29]);
    alphabet.insert("*", vec![0x2a]);
    alphabet.insert("+", vec![0x2b]);
    alphabet.insert(",", vec![0x2c]);
    alphabet.insert("-", vec![0x2d]);
    alphabet.insert(".", vec![0x2e]);
    alphabet.insert("/", vec![0x2f]);
    alphabet.insert("0", vec![0x30]);
    alphabet.insert("1", vec![0x31]);
    alphabet.insert("2", vec![0x32]);
    alphabet.insert("3", vec![0x33]);
    alphabet.insert("4", vec![0x34]);
    alphabet.insert("5", vec![0x35]);
    alphabet.insert("6", vec![0x36]);
    alphabet.insert("7", vec![0x37]);
    alphabet.insert("8", vec![0x38]);
    alphabet.insert("9", vec![0x39]);
    alphabet.insert(":", vec![0x3a]);
    alphabet.insert(";", vec![0x3b]);
    alphabet.insert("<", vec![0x3c]);
    alphabet.insert("=", vec![0x3d]);
    alphabet.insert(">", vec![0x3e]);
    alphabet.insert("?", vec![0x3f]);
    alphabet.insert("@", vec![0x40]);
    alphabet.insert("A", vec![0x41]);
    alphabet.insert("B", vec![0x42]);
    alphabet.insert("C", vec![0x43]);
    alphabet.insert("D", vec![0x44]);
    alphabet.insert("E", vec![0x45]);
    alphabet.insert("F", vec![0x46]);
    alphabet.insert("G", vec![0x47]);
    alphabet.insert("H", vec![0x48]);
    alphabet.insert("I", vec![0x49]);
    alphabet.insert("J", vec![0x4a]);
    alphabet.insert("K", vec![0x4b]);
    alphabet.insert("L", vec![0x4c]);
    alphabet.insert("M", vec![0x4d]);
    alphabet.insert("N", vec![0x4e]);
    alphabet.insert("O", vec![0x4f]);
    alphabet.insert("P", vec![0x50]);
    alphabet.insert("Q", vec![0x51]);
    alphabet.insert("R", vec![0x52]);
    alphabet.insert("S", vec![0x53]);
    alphabet.insert("T", vec![0x54]);
    alphabet.insert("U", vec![0x55]);
    alphabet.insert("V", vec![0x56]);
    alphabet.insert("W", vec![0x57]);
    alphabet.insert("X", vec![0x58]);
    alphabet.insert("Y", vec![0x59]);
    alphabet.insert("Z", vec![0x5a]);
    alphabet.insert("[", vec![0x5b]);
    alphabet.insert("\\", vec![0x5c]);
    alphabet.insert("]", vec![0x5d]);
    alphabet.insert("^", vec![0x5e]);
    alphabet.insert("_", vec![0x5f]);
    alphabet.insert("`", vec![0x60]);
    alphabet.insert("a", vec![0x61]);
    alphabet.insert("b", vec![0x62]);
    alphabet.insert("c", vec![0x63]);
    alphabet.insert("d", vec![0x64]);
    alphabet.insert("e", vec![0x65]);
    alphabet.insert("f", vec![0x66]);
    alphabet.insert("g", vec![0x67]);
    alphabet.insert("h", vec![0x68]);
    alphabet.insert("i", vec![0x69]);
    alphabet.insert("j", vec![0x6a]);
    alphabet.insert("k", vec![0x6b]);
    alphabet.insert("l", vec![0x6c]);
    alphabet.insert("m", vec![0x6d]);
    alphabet.insert("n", vec![0x6e]);
    alphabet.insert("o", vec![0x6f]);
    alphabet.insert("p", vec![0x70]);
    alphabet.insert("q", vec![0x71]);
    alphabet.insert("r", vec![0x72]);
    alphabet.insert("s", vec![0x73]);
    alphabet.insert("t", vec![0x74]);
    alphabet.insert("u", vec![0x75]);
    alphabet.insert("v", vec![0x76]);
    alphabet.insert("w", vec![0x77]);
    alphabet.insert("x", vec![0x78]);
    alphabet.insert("y", vec![0x79]);
    alphabet.insert("z", vec![0x7a]);
    alphabet.insert("{", vec![0x7b]);
    alphabet.insert("|", vec![0x7c]);
    alphabet.insert("}", vec![0x7d]);
    alphabet.insert("~", vec![0x7e]);
    alphabet.insert("\x7f", vec![0x7f]);
    alphabet.insert("\\u128", vec![0x80]);

    alphabet
  }
);