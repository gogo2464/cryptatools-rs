window.SIDEBAR_ITEMS = {"constant":[["EI_ABIVERSION","ABI version byte index."],["EI_CLASS","File class byte index."],["EI_DATA","Data encoding byte index."],["EI_OSABI","OS ABI byte index."],["EI_VERSION","File version byte index."],["ELFCLASS32","32-bit objects."],["ELFCLASS64","64-bit objects."],["ELFCLASSNONE","Invalid class."],["ELFCLASSNUM","ELF class number."],["ELFDATA2LSB","2’s complement, little endian."],["ELFDATA2MSB","2’s complement, big endian."],["ELFDATANONE","Invalid data encoding."],["ELFMAG","The ELF magic number."],["ELFOSABI_AIX","IBM AIX."],["ELFOSABI_ARM","ARM."],["ELFOSABI_ARM_AEABI","ARM EABI."],["ELFOSABI_FREEBSD","FreeBSD"],["ELFOSABI_GNU","Object uses GNU ELF extensions."],["ELFOSABI_HPUX","HP-UX."],["ELFOSABI_IRIX","SGI Irix."],["ELFOSABI_LINUX","Object uses GNU ELF extensions."],["ELFOSABI_MODESTO","Novell Modesto."],["ELFOSABI_NETBSD","NetBSD."],["ELFOSABI_NONE","UNIX System V ABI."],["ELFOSABI_OPENBSD","OpenBSD."],["ELFOSABI_SOLARIS","Sun Solaris."],["ELFOSABI_STANDALONE","Standalone (embedded) application."],["ELFOSABI_SYSV","UNIX System V ABI."],["ELFOSABI_TRU64","Compaq TRU64 UNIX."],["EM_386","Intel 80386"],["EM_56800EX","Freescale 56800EX DSC"],["EM_68HC05","Motorola MC68HC05 microcontroller"],["EM_68HC08","Motorola MC68HC08 microcontroller"],["EM_68HC11","Motorola MC68HC11 microcontroller"],["EM_68HC12","Motorola M68HC12"],["EM_68HC16","Motorola MC68HC16 microcontroller"],["EM_68K","Motorola m68k family"],["EM_78KOR","Renesas 78KOR"],["EM_8051","Intel 8051 and variants"],["EM_860","Intel 80860"],["EM_88K","Motorola m88k family"],["EM_960","Intel 80960"],["EM_AARCH64","ARM AARCH64"],["EM_ALTERA_NIOS2","Altera Nios II"],["EM_AMDGPU","AMD GPU"],["EM_ARC","Argonaut RISC Core"],["EM_ARCA","Arca RISC"],["EM_ARC_COMPACT","ARC International ARCompact"],["EM_ARC_COMPACT2","Synopsys ARCompact V2"],["EM_ARM","ARM"],["EM_AVR","Atmel AVR 8-bit microcontroller"],["EM_AVR32","Amtel 32-bit microprocessor"],["EM_BA1","Beyond BA1"],["EM_BA2","Beyond BA2"],["EM_BLACKFIN","Analog Devices Blackfin DSP"],["EM_BPF","Linux BPF – in-kernel virtual machine"],["EM_C166","Infineon C16x/XC16x"],["EM_CDP","Paneve CDP"],["EM_CE","Freescale Communication Engine RISC"],["EM_CLOUDSHIELD","CloudShield"],["EM_COGE","Cognitive Smart Memory Processor"],["EM_COLDFIRE","Motorola Coldfire"],["EM_COOL","Bluechip CoolEngine"],["EM_COREA_1ST","KIPO-KAIST Core-A 1st gen."],["EM_COREA_2ND","KIPO-KAIST Core-A 2nd gen."],["EM_CR","National Semi. CompactRISC"],["EM_CR16","National Semi. CompactRISC CR16"],["EM_CRAYNV2","Cray NV2 vector architecture"],["EM_CRIS","Axis Communications 32-bit emb.proc"],["EM_CRX","National Semi. CompactRISC CRX"],["EM_CSKY","C-SKY"],["EM_CSR_KALIMBA","CSR Kalimba"],["EM_CUDA","NVIDIA CUDA"],["EM_CYPRESS_M8C","Cypress M8C"],["EM_D10V","Mitsubishi D10V"],["EM_D30V","Mitsubishi D30V"],["EM_DSP24","New Japan Radio (NJR) 24-bit DSP"],["EM_DSPIC30F","Microchip Technology dsPIC30F"],["EM_DXP","Icera Semi. Deep Execution Processor"],["EM_ECOG16","Cyan Technology eCOG16"],["EM_ECOG1X","Cyan Technology eCOG1X"],["EM_ECOG2","Cyan Technology eCOG2"],["EM_EMX16","KM211 KMX16"],["EM_EMX8","KM211 KMX8"],["EM_ETPU","Freescale Extended Time Processing Unit"],["EM_EXCESS","eXcess configurable cpu"],["EM_F2MC16","Fujitsu F2MC16"],["EM_FAKE_ALPHA","Digital Alpha"],["EM_FIREPATH","Element 14 64-bit DSP Processor"],["EM_FR20","Fujitsu FR20"],["EM_FR30","Fujitsu FR30"],["EM_FT32","FTDI Chip FT32"],["EM_FX66","Siemens FX66 microcontroller"],["EM_H8S","Hitachi H8S"],["EM_H8_300","Hitachi H8/300"],["EM_H8_300H","Hitachi H8/300H"],["EM_H8_500","Hitachi H8/500"],["EM_HUANY","Harvard University machine-independent object files"],["EM_IAMCU","Intel MCU"],["EM_IA_64","Intel Merced"],["EM_INTELGT","Intel Graphics Technology"],["EM_IP2K","Ubicom IP2xxx"],["EM_JAVELIN","Infineon Technologies 32-bit emb.proc"],["EM_K10M","Intel K10M"],["EM_KM32","KM211 KM32"],["EM_KMX32","KM211 KMX32"],["EM_KVARC","KM211 KVARC"],["EM_L10M","Intel L10M"],["EM_LATTICEMICO32","RISC for Lattice FPGA"],["EM_M16C","Renesas M16C"],["EM_M32","AT&T WE 32100"],["EM_M32C","Renesas M32C"],["EM_M32R","Mitsubishi M32R"],["EM_MANIK","M2000 Reconfigurable RISC"],["EM_MAX","MAX processor"],["EM_MAXQ30","Dallas Semi. MAXQ30 mc"],["EM_MCHP_PIC","Microchip 8-bit PIC(r)"],["EM_MCST_ELBRUS","MCST Elbrus"],["EM_ME16","Toyota ME16 processor"],["EM_METAG","Imagination Tech. META"],["EM_MICROBLAZE","Xilinx MicroBlaze"],["EM_MIPS","MIPS R3000 big-endian"],["EM_MIPS_RS3_LE","MIPS R3000 little-endian"],["EM_MIPS_X","Stanford MIPS-X"],["EM_MMA","Fujitsu MMA Multimedia Accelerator"],["EM_MMDSP_PLUS","STMicroelectronics 64bit VLIW DSP"],["EM_MMIX","Donald Knuth’s educational 64-bit proc"],["EM_MN10200","Matsushita MN10200"],["EM_MN10300","Matsushita MN10300"],["EM_MOXIE","Moxie processor"],["EM_MSP430","Texas Instruments msp430"],["EM_NCPU","Sony nCPU embeeded RISC"],["EM_NDR1","Denso NDR1 microprocessor"],["EM_NDS32","Andes Tech. compact code emb. RISC"],["EM_NONE","TODO: use Enum with explicit discriminant and get debug printer for free? No machine"],["EM_NORC","Nanoradio Optimized RISC"],["EM_NS32K","National Semi. 32000"],["EM_NUM",""],["EM_OPEN8","Open8 RISC"],["EM_OPENRISC","OpenRISC 32-bit embedded processor"],["EM_PARISC","HPPA"],["EM_PCP","Siemens PCP"],["EM_PDP10","Digital PDP-10"],["EM_PDP11","Digital PDP-11"],["EM_PDSP","Sony DSP Processor"],["EM_PJ","picoJava"],["EM_PPC","PowerPC"],["EM_PPC64","PowerPC 64-bit"],["EM_PRISM","SiTera Prism"],["EM_QDSP6","QUALCOMM DSP6"],["EM_R32C","Renesas R32C"],["EM_RCE","Motorola RCE"],["EM_RH32","TRW RH-32"],["EM_RISCV","RISC-V"],["EM_RL78","Renesas RL78"],["EM_RS08","Freescale RS08"],["EM_RX","Renesas RX"],["EM_S370","IBM System/370"],["EM_S390","IBM S390"],["EM_SCORE7","Sunplus S+core7 RISC"],["EM_SEP","Sharp embedded microprocessor"],["EM_SE_C17","Seiko Epson C17"],["EM_SE_C33","Seiko Epson S1C33 family"],["EM_SH","Hitachi SH"],["EM_SHARC","Analog Devices SHARC family"],["EM_SLE9X","Infineon Tech. SLE9X"],["EM_SNP1K","Trebia SNP 1000"],["EM_SPARC","SUN SPARC"],["EM_SPARC32PLUS","Sun’s “v8plus”"],["EM_SPARCV9","SPARC v9 64-bit"],["EM_SPU","IBM SPU/SPC"],["EM_ST100","STMicroelectronic ST100 processor"],["EM_ST19","STMicroelectronics ST19 8 bit mc"],["EM_ST200","STMicroelectronics ST200"],["EM_ST7","STmicroelectronics ST7 8 bit mc"],["EM_ST9PLUS","STMicroelectronics ST9+ 8/16 mc"],["EM_STARCORE","Motorola Start*Core processor"],["EM_STM8","STMicroelectronics STM8"],["EM_STXP7X","STMicroelectronics STxP7x"],["EM_SVX","Silicon Graphics SVx"],["EM_TILE64","Tileta TILE64"],["EM_TILEGX","Tilera TILE-Gx"],["EM_TILEPRO","Tilera TILEPro"],["EM_TINYJ","Advanced Logic Corp. Tinyj emb.fam"],["EM_TI_ARP32","Texas Instruments App. Specific RISC"],["EM_TI_C2000","Texas Instruments TMS320C2000 DSP"],["EM_TI_C5500","Texas Instruments TMS320C55x DSP"],["EM_TI_C6000","Texas Instruments TMS320C6000 DSP"],["EM_TI_PRU","Texas Instruments Prog. Realtime Unit"],["EM_TMM_GPP","Thompson Multimedia General Purpose Proc"],["EM_TPC","Tenor Network TPC"],["EM_TRICORE","Siemens Tricore"],["EM_TRIMEDIA","NXP Semi. TriMedia"],["EM_TSK3000","Altium TSK3000"],["EM_UNICORE","PKU-Unity & MPRC Peking Uni. mc series"],["EM_V800","NEC V800 series"],["EM_V850","NEC v850"],["EM_VAX","Digital VAX"],["EM_VIDEOCORE","Alphamosaic VideoCore"],["EM_VIDEOCORE3","Broadcom VideoCore III"],["EM_VIDEOCORE5","Broadcom VideoCore V"],["EM_VISIUM","Controls and Data Services VISIUMcore"],["EM_VPP500","Fujitsu VPP500"],["EM_X86_64","AMD x86-64 architecture"],["EM_XCORE","XMOS xCORE"],["EM_XGATE","Motorola XGATE"],["EM_XIMO16","New Japan Radio (NJR) 16-bit DSP"],["EM_XTENSA","Tensilica Xtensa Architecture"],["EM_Z80","Zilog Z80"],["EM_ZSP","LSI Logic 16-bit DSP Processor"],["ET_CORE","Core file."],["ET_DYN","Shared object file."],["ET_EXEC","Executable file."],["ET_HIOS","OS-specific range end"],["ET_HIPROC","Processor-specific range end"],["ET_LOOS","OS-specific range start"],["ET_LOPROC","Processor-specific range start"],["ET_NONE","No file type."],["ET_NUM","Number of defined types."],["ET_REL","Relocatable file."],["EV_CURRENT","Current ELF version."],["SELFMAG","Sizeof ELF magic number."],["SIZEOF_IDENT","Number of bytes in an identifier."]],"fn":[["class_to_str","Convert a ELF class byte to the associated string."],["et_to_str","Convert an ET value to their associated string."],["machine_to_str","Convert machine to str representation"]],"mod":[["header32",""],["header64",""]],"struct":[["Header","An ELF header"]]};