window.SIDEBAR_ITEMS = {"constant":[["DYLD_IOS_VERSION_10_0",""],["DYLD_IOS_VERSION_11_0",""],["DYLD_IOS_VERSION_2_0",""],["DYLD_IOS_VERSION_2_1",""],["DYLD_IOS_VERSION_2_2",""],["DYLD_IOS_VERSION_3_0",""],["DYLD_IOS_VERSION_3_1",""],["DYLD_IOS_VERSION_3_2",""],["DYLD_IOS_VERSION_4_0",""],["DYLD_IOS_VERSION_4_1",""],["DYLD_IOS_VERSION_4_2",""],["DYLD_IOS_VERSION_4_3",""],["DYLD_IOS_VERSION_5_0",""],["DYLD_IOS_VERSION_5_1",""],["DYLD_IOS_VERSION_6_0",""],["DYLD_IOS_VERSION_6_1",""],["DYLD_IOS_VERSION_7_0",""],["DYLD_IOS_VERSION_7_1",""],["DYLD_IOS_VERSION_8_0",""],["DYLD_IOS_VERSION_9_0",""],["DYLD_MACOSX_VERSION_10_10",""],["DYLD_MACOSX_VERSION_10_11",""],["DYLD_MACOSX_VERSION_10_12",""],["DYLD_MACOSX_VERSION_10_13",""],["DYLD_MACOSX_VERSION_10_4",""],["DYLD_MACOSX_VERSION_10_5",""],["DYLD_MACOSX_VERSION_10_6",""],["DYLD_MACOSX_VERSION_10_7",""],["DYLD_MACOSX_VERSION_10_8",""],["DYLD_MACOSX_VERSION_10_9",""],["SECTION_ATTRIBUTES","24 section attributes"],["SECTION_ATTRIBUTES_SYS","system setable attributes"],["SECTION_ATTRIBUTES_USR","User setable attributes"],["SECTION_TYPE","256 section types"],["SECT_BSS","the real uninitialized data sectionno padding"],["SECT_COMMON","the section common symbols are allocated in by the link editor"],["SECT_DATA","the real initialized data section no padding, no bss overlap"],["SECT_FVMLIB_INIT0","the fvmlib initialization section"],["SECT_FVMLIB_INIT1","the section following the fvmlib initialization section"],["SECT_ICON_HEADER","the icon headers"],["SECT_ICON_TIFF","the icons in tiff format"],["SECT_OBJC_MODULES","module information"],["SECT_OBJC_REFS","string table"],["SECT_OBJC_STRINGS","string table"],["SECT_OBJC_SYMBOLS","symbol table"],["SECT_TEXT","the real text part of the text section no headers, and no padding"],["SEG_DATA","the tradition UNIX data segment"],["SEG_ICON","the icon segment"],["SEG_IMPORT","the segment for the self (dyld) modifing code stubs that has read, write and execute permissions"],["SEG_LINKEDIT","the segment containing all structs created and maintained by the link editor.  Created with -seglinkedit option to ld(1) for MH_EXECUTE and FVMLIB file types only"],["SEG_OBJC","objective-C runtime segment"],["SEG_PAGEZERO","the pagezero segment which has no protections and catches NULL references for MH_EXECUTE files"],["SEG_TEXT","the tradition UNIX text segment"],["SEG_UNIXSTACK","the unix stack segment"],["S_16BYTE_LITERALS","section with only 16 byte literals"],["S_4BYTE_LITERALS","section with only 4 byte literals"],["S_8BYTE_LITERALS","section with only 8 byte literals"],["S_ATTR_DEBUG","debug section"],["S_ATTR_EXT_RELOC","section has external relocation entries"],["S_ATTR_LIVE_SUPPORT","blocks are live if they reference live blocks"],["S_ATTR_LOC_RELOC","section has local relocation entries"],["S_ATTR_NO_DEAD_STRIP","no dead stripping"],["S_ATTR_NO_TOC","section contains coalesced symbols that are not to be in a ranlib table of contents"],["S_ATTR_PURE_INSTRUCTIONS","section contains only true machine instructions"],["S_ATTR_SELF_MODIFYING_CODE","Used with i386 code stubs written on by dyld"],["S_ATTR_SOME_INSTRUCTIONS","section contains some machine instructions"],["S_ATTR_STRIP_STATIC_SYMS","ok to strip static symbols in this section in files with the MH_DYLDLINK flag"],["S_COALESCED","section contains symbols that are to be coalesced"],["S_CSTRING_LITERALS","section with only literal C strings"],["S_DTRACE_DOF","section contains DTrace Object Format"],["S_GB_ZEROFILL","zero fill on demand section that can be larger than 4 gigabytes)"],["S_INTERPOSING","section with only pairs of function pointers for interposing"],["S_LAZY_DYLIB_SYMBOL_POINTERS","section with only lazy symbol pointers to lazy loaded dylibs"],["S_LAZY_SYMBOL_POINTERS","section with only lazy symbol pointers"],["S_LITERAL_POINTERS","section with only pointers to"],["S_MOD_INIT_FUNC_POINTERS","section with only function pointers for initialization"],["S_MOD_TERM_FUNC_POINTERS","section with only function pointers for termination"],["S_NON_LAZY_SYMBOL_POINTERS","section with only non-lazy symbol pointers"],["S_REGULAR","regular section"],["S_SYMBOL_STUBS","section with only symbol stubs, byte size of stub in the reserved2 field"],["S_THREAD_LOCAL_INIT_FUNCTION_POINTERS","functions to call to initialize TLV values"],["S_THREAD_LOCAL_REGULAR","template of initial  values for TLVs"],["S_THREAD_LOCAL_VARIABLES","TLV descriptors"],["S_THREAD_LOCAL_VARIABLE_POINTERS","pointers to TLV  descriptors"],["S_THREAD_LOCAL_ZEROFILL","template of initial  values for TLVs"],["S_ZEROFILL","zero fill on demand section"],["VM_PROT_EXECUTE","Segment is executable."],["VM_PROT_READ","Segment is readable."],["VM_PROT_WRITE","Segment is writable."]],"mod":[["cputype",""]]};