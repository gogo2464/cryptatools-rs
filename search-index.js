var searchIndex = new Map(JSON.parse('[["cryptatools_core",{"t":"CCCCCCCCCCCCCCCCCFFJNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCFNNNNNNNNNNNNNNNNNCFNNNNNNNNNNNNNNNNNNNNNNNCCFNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNCCCCCCCFONNNNNNNNNNNNNNNNNNNNNCFFOONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNONNCFNNNNNNNNNNNNNNNNNNNNCCCCFFSSNNNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNHONNNNNNNNNNNNNNHNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["cryptanalysis","cryptography","utils","common","custom","plain_text_detector","rsa","common_modulus_attack","chosen_plain_text_attacks","general_cryptanalysis_methods","know_plaintext_attacks","brute_force","frequency_analysis","hash_cryptanalysis","caesar_number","coincidence_index","distribution_algorithms","CoincidenceIndexGenerator","CoincidenceIndexGuesser","ENGLISH_DEFAULT_COINCIDENCE_INDEX","borrow","","borrow_mut","","clone_handle","","consume_handle","","deref","","deref_mut","","drop","","from","","generate_coincidence_index_for_key","generate_coincidence_index_for_key_from_file","guess_coincidence_index","guess_coincidence_index_statistics_from_file","init","","into","","lower_error","lower_return","new","","new_handle","","try_from","","try_into","","type_id","","vzip","","statistical","Statistical","borrow","borrow_mut","clone_handle","consume_handle","deref","deref_mut","drop","from","guess_statistical_distribution","init","into","new","new_handle","try_from","try_into","type_id","vzip","birthday_paradox","BirthdayParadox","borrow","borrow_mut","calculate_birthday_paradox","calculate_birthday_paradox_expecting_percent_focusing_on_precision","calculate_birthday_paradox_expecting_percent_focusing_on_speed_with_taylor","calculate_permuted_choice_number","clone_handle","consume_handle","deref","deref_mut","drop","factorial","from","init","into","lower_error","lower_return","new","new_handle","try_from","try_into","type_id","vzip","matsui_s_algorithm","algorithm_one","AlgorithmOne","borrow","borrow_mut","clone_handle","consume_handle","deref","deref_mut","drop","from","init","into","new","new_handle","solve","try_from","try_into","type_id","vzip","PlainTextDetector","borrow","borrow_mut","catch_confidence_values","clone_handle","consume_handle","deref","deref_mut","detect_language","drop","from","init","into","is_plain_text","new","new_handle","try_from","try_into","type_id","vzip","classical","modern","encryption","monoalphabetic_ciphers","polyalphabetic_ciphers","transpositional_ciphers","caesar_number","CaesarNumberAlgorithm","alphabet","borrow","borrow_mut","clone_handle","consume_handle","decrypt_by_opcode_shift","deref","deref_mut","drop","encrypt_by_alphabet_shift","encrypt_by_opcode_shift","from","init","into","lower_error","lower_return","new","new_handle","try_from","try_into","type_id","vzip","vigenere","Vigenere","VigenereNoTable","alphabet","","borrow","","borrow_mut","","clone_handle","","consume_handle","","deref","","deref_mut","","drop","","encrypt","","from","","init","","into","","new","","new_handle","","sorted_alphabet","try_from","","try_into","","type_id","","vigenere_table","vzip","","columnar_transposition","ColumnarTranspositionAlgorithm","borrow","borrow_mut","clone_handle","consume_handle","decrypt","deref","deref_mut","drop","encrypt","from","init","into","lower_error","lower_return","new","new_handle","try_from","try_into","type_id","vzip","encoding","encryption","alphabets","convert","Alphabet","Encoding","PRINTABLE","UU_ENCODING_ALPHABET","ascii_encoding","ascii_printable_only_encoding","borrow","","borrow_mut","","bytes","clone","","clone_handle","","clone_into","","clone_to_uninit","","consume_handle","","decode","deref","","deref_mut","","drop","","encoding","eq","equivalent","","","","extended_ascii_encoding","fmt","from","","full_hexadecimal_alphabet","get_encoding","hexadecimal_ascii_lowercase_sixteen_bits_alphabet","init","","intel_x86_32_encoding","into","","lower","","lower_error","","lower_return","","new","new_empty","new_handle","","pokered_charset_encoding","split_bytes_by_characters_representation","str","to_owned","","try_convert_unexpected_callback_error","try_from","","try_into","","try_lift","","try_lift_successful_return","try_read","","type_id","","uniffy_opcode_group","unknow_opcodes","uppercase_no_space_ascii_alphabet_encoding","vzip","","write","","Decode","Encode","borrow","","borrow_mut","","clone_handle","","consume_handle","","deref","","deref_mut","","drop","","encode","from","","from_ascii_to_u8","from_u8_to_ascii","init","","into","","new_handle","","try_from","","try_into","","type_id","","vzip",""],"q":[[0,"cryptatools_core"],[3,"cryptatools_core::cryptanalysis"],[6,"cryptatools_core::cryptanalysis::common"],[7,"cryptatools_core::cryptanalysis::common::rsa"],[8,"cryptatools_core::cryptanalysis::custom"],[11,"cryptatools_core::cryptanalysis::custom::general_cryptanalysis_methods"],[14,"cryptatools_core::cryptanalysis::custom::general_cryptanalysis_methods::brute_force"],[15,"cryptatools_core::cryptanalysis::custom::general_cryptanalysis_methods::frequency_analysis"],[17,"cryptatools_core::cryptanalysis::custom::general_cryptanalysis_methods::frequency_analysis::coincidence_index"],[58,"cryptatools_core::cryptanalysis::custom::general_cryptanalysis_methods::frequency_analysis::distribution_algorithms"],[59,"cryptatools_core::cryptanalysis::custom::general_cryptanalysis_methods::frequency_analysis::distribution_algorithms::statistical"],[77,"cryptatools_core::cryptanalysis::custom::general_cryptanalysis_methods::hash_cryptanalysis"],[78,"cryptatools_core::cryptanalysis::custom::general_cryptanalysis_methods::hash_cryptanalysis::birthday_paradox"],[102,"cryptatools_core::cryptanalysis::custom::know_plaintext_attacks"],[103,"cryptatools_core::cryptanalysis::custom::know_plaintext_attacks::matsui_s_algorithm"],[104,"cryptatools_core::cryptanalysis::custom::know_plaintext_attacks::matsui_s_algorithm::algorithm_one"],[122,"cryptatools_core::cryptanalysis::plain_text_detector"],[142,"cryptatools_core::cryptography"],[144,"cryptatools_core::cryptography::classical"],[145,"cryptatools_core::cryptography::classical::encryption"],[148,"cryptatools_core::cryptography::classical::encryption::monoalphabetic_ciphers"],[149,"cryptatools_core::cryptography::classical::encryption::monoalphabetic_ciphers::caesar_number"],[172,"cryptatools_core::cryptography::classical::encryption::polyalphabetic_ciphers"],[173,"cryptatools_core::cryptography::classical::encryption::polyalphabetic_ciphers::vigenere"],[213,"cryptatools_core::cryptography::classical::encryption::transpositional_ciphers"],[214,"cryptatools_core::cryptography::classical::encryption::transpositional_ciphers::columnar_transposition"],[235,"cryptatools_core::cryptography::modern"],[237,"cryptatools_core::utils"],[239,"cryptatools_core::utils::alphabets"],[319,"cryptatools_core::utils::convert"],[354,"once_cell::sync"],[355,"uniffi_core::ffi::handle"],[356,"alloc::sync"],[357,"alloc::vec"],[358,"alloc::string"],[359,"uniffi_core::ffi::rustbuffer"],[360,"uniffi_core::ffi::rustcalls"],[361,"core::result"],[362,"core::any"],[363,"std::collections::hash::map"],[364,"lingua::language"],[365,"core::option"],[366,"bimap::btree"],[367,"core::fmt"],[368,"anyhow"],[369,"uniffi_core::ffi::callbackinterface"]],"i":"````````````````````AjA`101010101010100011101011101010101010``Bf0000000000000000``Bj0000000000000000000000```Bn0000000000000000`C`000000000000000000````````Cj000000000000000000000```CnD`101010101010101010101010100101010110``Db0000000000000000000````````Bb0Dd10100101010101101010110000010011110110100010111011`001001010000001`110100``EbEd1010101010100100110101010101010","f":"```````````````````{{}b}{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{hh}0{h{{j{c}}}{}}0{l{{d{c}}}{}}0{l{{d{fc}}}{}}0{ln}0{cc{}}0{{{d{A`}}l{Ad{Ab}}}Af}{{{d{A`}}lAh}Af}{{{d{Aj}}{Ad{Ab}}}Af}{{{d{Aj}}Ah}Af}{{}l}0{{}c{}}0{AjAl}{Aj{{B`{cAn}}}{}}{{{j{Bb}}}Aj}{{{j{Bb}}}A`}{{{j{c}}}h{}}0{c{{B`{e}}}{}{}}0{{}{{B`{c}}}{}}0{dBd}0{{}c{}}0``{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{hh}{h{{j{c}}}{}}{l{{d{c}}}{}}{l{{d{fc}}}{}}{ln}{cc{}}{{{d{Bf}}{Ad{Ab}}}{{Bh{{Ad{Ab}}Af}}}}{{}l}{{}c{}}{BbBf}{{{j{c}}}h{}}{c{{B`{e}}}{}{}}{{}{{B`{c}}}{}}{dBd}{{}c{}}``{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{Bj}}BlBl}Bl}{{{d{Bj}}{Ad{Ab}}Af}Bl}{{{d{Bj}}{Ad{Ab}}Af}Af}2{hh}{h{{j{c}}}{}}{l{{d{c}}}{}}{l{{d{fc}}}{}}{ln}{{{d{Bj}}Bl}Bl}{cc{}}{{}l}{{}c{}}{BjAl}{Bj{{B`{cAn}}}{}}{{{j{Bb}}}Bj}{{{j{c}}}h{}}{c{{B`{e}}}{}{}}{{}{{B`{c}}}{}}{dBd}{{}c{}}```{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{hh}{h{{j{c}}}{}}{l{{d{c}}}{}}{l{{d{fc}}}{}}{ln}{cc{}}{{}l}{{}c{}}{BbBn}?{{}n}?>=<`;:{{C`Ah{Ad{Cb}}}{{Cf{{Ad{{Cd{CbAf}}}}}}}}:987{{C`Ah{Ad{Cb}}}{{Cf{Cb}}}}7654{{C`Ah{Ad{Cb}}Af}Ch}{{}C`}{{{j{c}}}h{}}{c{{B`{e}}}{}{}}{{}{{B`{c}}}{}}{dBd}{{}c{}}````````{Cjj}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{hh}{h{{j{c}}}{}}{{{d{Cj}}{Ad{Ab}}Cl}{{Ad{Ab}}}}{l{{d{c}}}{}}{l{{d{fc}}}{}}{ln}33{cc{}}{{}l}{{}c{}}{CjAl}{Cj{{B`{cAn}}}{}}{{{j{Bb}}}Cj}{{{j{c}}}h{}}{c{{B`{e}}}{}{}}{{}{{B`{c}}}{}}{dBd}{{}c{}}```{CnBb}{D`j}{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{hh}0{h{{j{c}}}{}}0{l{{d{c}}}{}}0{l{{d{fc}}}{}}0{ln}0{{{d{Cn}}{Ad{Ab}}{Ad{{Ad{Ab}}}}}{{Ad{Ab}}}}{{{d{D`}}{Ad{Ab}}{Ad{{Ad{Ab}}}}}{{Ad{Ab}}}}{cc{}}0{{}l}0{{}c{}}0{BbCn}{{{j{Bb}}}D`}{{{j{c}}}h{}}0{D`Ad}{c{{B`{e}}}{}{}}0{{}{{B`{c}}}{}}0{dBd}0{CnAd}{{}c{}}0``{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{hh}{h{{j{c}}}{}}{{{d{Db}}{Ad{Ab}}Cl}{{Ad{Ab}}}}{l{{d{c}}}{}}{l{{d{fc}}}{}}{ln}3{cc{}}{{}l}{{}c{}}{DbAl}{Db{{B`{cAn}}}{}}{{{j{Bb}}}Db}{{{j{c}}}h{}}{c{{B`{e}}}{}{}}{{}{{B`{c}}}{}}{dBd}{{}c{}}``````{{}d}0{{{d{fBb}}}Bb}0{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{DdAd}{{{d{Dd}}}Dd}{{{d{Bb}}}Bb}{hh}0{{d{d{fc}}}n{}}0{{dAb}n}0{h{{j{c}}}{}}0{{{d{Bb}}{Ad{Ab}}}{{Ad{Dd}}}}{l{{d{c}}}{}}0{l{{d{fc}}}{}}0{ln}0{BbDf}{{{d{Dd}}{d{Dd}}}Ch}{{d{d{c}}}Ch{}}000{{{d{fBb}}}Bb}{{{d{Dd}}{d{fDh}}}Dj}{cc{}}0{{}Bb}{{{d{Bb}}}{{Ad{Dd}}}}1{{}l}05{{}c{}}0{Ddc{}}{DdAl}0{BbAl}{Dd{{Dl{cAn}}}{}}{Bb{{B`{cAn}}}{}}{{{Ad{Dd}}}Bb}9{{{j{c}}}h{}}0={{{d{Bb}}{Ad{Ab}}}{{Ad{{Ad{Ab}}}}}}{DdAh}{dc{}}0{Dn{{Dl{Dd}}}}{c{{B`{e}}}{}{}}0{{}{{B`{c}}}{}}0{c{{Dl{Dd}}}{}}{Al{{Dl{Dd}}}}{c{{Dl{Dd}}}{}}{{{d{f{d{{E`{Ab}}}}}}}{{Dl{Dd}}}}0{dBd}0{{{Ad{{Ad{Ab}}}}}{{Ad{Ab}}}}{{{d{fBb}}}Bb}0{{}c{}}0{{Dd{d{f{Ad{Ab}}}}}n}0``{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{hh}0{h{{j{c}}}{}}0{l{{d{c}}}{}}0{l{{d{fc}}}{}}0{ln}0{{{d{Bb}}Ah}{{Ad{Ab}}}}{cc{}}0{Ah{{Ad{Ab}}}}{{{Ad{Ab}}}Ah}{{}l}0{{}c{}}0{{{j{c}}}h{}}0{c{{B`{e}}}{}{}}0{{}{{B`{c}}}{}}0{dBd}0{{}c{}}0","D":"Gl","p":[[5,"Lazy",354],[1,"reference",null,null,1],[0,"mut"],[5,"Handle",355],[5,"Arc",356,null,1],[1,"usize"],[1,"unit"],[5,"CoincidenceIndexGenerator",17],[1,"u8"],[5,"Vec",357],[1,"f64"],[5,"String",358],[5,"CoincidenceIndexGuesser",17],[5,"RustBuffer",359],[6,"RustCallError",360],[6,"Result",361,null,1],[5,"Alphabet",239],[5,"TypeId",362],[5,"Statistical",59],[5,"HashMap",363],[5,"BirthdayParadox",78],[1,"u64"],[5,"AlgorithmOne",104],[5,"PlainTextDetector",122],[6,"Language",364],[1,"tuple",null,null,1],[6,"Option",365,null,1],[1,"bool"],[5,"CaesarNumberAlgorithm",149],[1,"u32"],[5,"Vigenere",173],[5,"VigenereNoTable",173],[5,"ColumnarTranspositionAlgorithm",214],[5,"Encoding",239],[5,"BiBTreeMap",366],[5,"Formatter",367],[8,"Result",367],[8,"Result",368],[5,"UnexpectedUniFFICallbackError",369],[1,"slice"],[5,"Decode",319],[5,"Encode",319]],"r":[],"b":[[285,"impl-Lower%3CUT%3E-for-Encoding"],[286,"impl-FfiConverter%3CUT%3E-for-Encoding"],[305,"impl-Lift%3CUT%3E-for-Encoding"],[306,"impl-FfiConverter%3CUT%3E-for-Encoding"],[308,"impl-Lift%3CUT%3E-for-Encoding"],[309,"impl-FfiConverter%3CUT%3E-for-Encoding"],[317,"impl-Lower%3CUT%3E-for-Encoding"],[318,"impl-FfiConverter%3CUT%3E-for-Encoding"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACQBJgAAAAMABgACAAoAAAAMABYAKQABAC0AFgBGAAAASAAKAFYABABdAAAAXwARAHIAAAB0AAkAfwADAIQAAACGAAAAiQALAJYAAACYAAMAnQACAKMAAAClABoAwQAAAMQAAQDIABMA3QACAOIAAADkABAA9gAOAAYBBQANAQQAEwEAABcBAAAZAQIAHgEbADsBFABVAQEAWQEJAA==","P":[[20,"T"],[24,""],[26,"T"],[32,""],[34,"T"],[36,""],[42,"U"],[44,""],[45,"LowerReturn::ReturnType"],[46,""],[48,"T"],[50,"U,T"],[52,"U"],[54,""],[56,"V"],[60,"T"],[62,""],[63,"T"],[66,""],[67,"T"],[68,""],[70,"U"],[71,""],[72,"T"],[73,"U,T"],[74,"U"],[75,""],[76,"V"],[79,"T"],[81,""],[86,"T"],[89,""],[91,"T"],[92,""],[93,"U"],[94,""],[95,"LowerReturn::ReturnType"],[96,""],[97,"T"],[98,"U,T"],[99,"U"],[100,""],[101,"V"],[105,"T"],[107,""],[108,"T"],[111,""],[112,"T"],[113,""],[114,"U"],[115,""],[116,"T"],[117,""],[118,"U,T"],[119,"U"],[120,""],[121,"V"],[123,"T"],[125,""],[127,"T"],[130,""],[132,"T"],[133,""],[134,"U"],[135,""],[137,"T"],[138,"U,T"],[139,"U"],[140,""],[141,"V"],[150,""],[151,"T"],[153,""],[154,"T"],[155,""],[156,"T"],[158,""],[161,"T"],[162,""],[163,"U"],[164,""],[165,"LowerReturn::ReturnType"],[166,""],[167,"T"],[168,"U,T"],[169,"U"],[170,""],[171,"V"],[175,""],[177,"T"],[181,""],[183,"T"],[189,""],[193,"T"],[195,""],[197,"U"],[199,""],[201,"T"],[203,""],[204,"U,T"],[206,"U"],[208,""],[211,"V"],[215,"T"],[217,""],[218,"T"],[219,""],[220,"T"],[222,""],[224,"T"],[225,""],[226,"U"],[227,""],[228,"LowerReturn::ReturnType"],[229,""],[230,"T"],[231,"U,T"],[232,"U"],[233,""],[234,"V"],[241,""],[245,"T"],[249,""],[254,"T"],[256,""],[258,"T"],[260,""],[261,"T"],[265,""],[269,"K"],[273,""],[275,"T"],[277,""],[283,"U"],[285,"Lower::FfiType"],[286,""],[289,"LowerReturn::ReturnType"],[291,""],[293,"T"],[295,""],[298,"T"],[300,""],[301,"U,T"],[303,"U"],[305,"Lift::FfiType"],[306,""],[307,"LiftReturn::ReturnType"],[308,""],[315,"V"],[317,""],[321,"T"],[325,""],[327,"T"],[333,""],[336,"T"],[338,""],[342,"U"],[344,"T"],[346,"U,T"],[348,"U"],[350,""],[352,"V"]]}],["uniffi_bindgen",{"t":"H","n":["main"],"q":[[0,"uniffi_bindgen"]],"i":"`","f":"{{}b}","D":"`","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA=","P":[]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[13496,189]}