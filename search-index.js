var searchIndex = new Map(JSON.parse('[["cryptatools_core",{"t":"CCCCCCCCCCCCCCCCCFFJNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCFNNNNNNNNNNNNNNNNNCFNNNNNNNNNNNNNNNNNNNNNCCFNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNCCCCCCCFONNNNNNNNNNNNNNNNNNNCFFOONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNONNCFNNNNNNNNNNNNNNNNNNCCCCFFSSNNNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNHONNNNNNNNHNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["cryptanalysis","cryptography","utils","common","custom","plain_text_detector","rsa","common_modulus_attack","chosen_plain_text_attacks","general_cryptanalysis_methods","know_plaintext_attacks","brute_force","frequency_analysis","hash_cryptanalysis","caesar_number","coincidence_index","distribution_algorithms","CoincidenceIndexGenerator","CoincidenceIndexGuesser","ENGLISH_DEFAULT_COINCIDENCE_INDEX","borrow","","borrow_mut","","clone_handle","","consume_handle","","deref","","deref_mut","","drop","","from","","generate_coincidence_index_for_key","generate_coincidence_index_for_key_from_file","guess_coincidence_index","guess_coincidence_index_statistics_from_file","init","","into","","new","","new_handle","","try_from","","try_into","","type_id","","vzip","","statistical","Statistical","borrow","borrow_mut","clone_handle","consume_handle","deref","deref_mut","drop","from","guess_statistical_distribution","init","into","new","new_handle","try_from","try_into","type_id","vzip","birthday_paradox","BirthdayParadox","borrow","borrow_mut","calculate_birthday_paradox","calculate_birthday_paradox_expecting_percent_focusing_on_precision","calculate_birthday_paradox_expecting_percent_focusing_on_speed_with_taylor","calculate_permuted_choice_number","clone_handle","consume_handle","deref","deref_mut","drop","factorial","from","init","into","new","new_handle","try_from","try_into","type_id","vzip","matsui_s_algorithm","algorithm_one","AlgorithmOne","borrow","borrow_mut","clone_handle","consume_handle","deref","deref_mut","drop","from","init","into","new","new_handle","solve","try_from","try_into","type_id","vzip","PlainTextDetector","borrow","borrow_mut","catch_confidence_values","clone_handle","consume_handle","deref","deref_mut","detect_language","drop","from","init","into","is_plain_text","new","new_handle","try_from","try_into","type_id","vzip","classical","modern","encryption","monoalphabetic_ciphers","polyalphabetic_ciphers","transpositional_ciphers","caesar_number","CaesarNumberAlgorithm","alphabet","borrow","borrow_mut","clone_handle","consume_handle","decrypt_by_opcode_shift","deref","deref_mut","drop","encrypt_by_alphabet_shift","encrypt_by_opcode_shift","from","init","into","new","new_handle","try_from","try_into","type_id","vzip","vigenere","Vigenere","VigenereNoTable","alphabet","","borrow","","borrow_mut","","clone_handle","","consume_handle","","deref","","deref_mut","","drop","","encrypt","","from","","init","","into","","new","","new_handle","","sorted_alphabet","try_from","","try_into","","type_id","","vigenere_table","vzip","","columnar_transposition","ColumnarTranspositionAlgorithm","borrow","borrow_mut","clone_handle","consume_handle","decrypt","deref","deref_mut","drop","encrypt","from","init","into","new","new_handle","try_from","try_into","type_id","vzip","encoding","encryption","alphabets","convert","Alphabet","Encoding","PRINTABLE","UU_ENCODING_ALPHABET","ascii_encoding","ascii_printable_only_encoding","borrow","","borrow_mut","","bytes","clone","","clone_handle","","clone_into","","clone_to_uninit","","consume_handle","","decode","deref","","deref_mut","","drop","","encoding","eq","equivalent","","extended_ascii_encoding","fmt","from","","full_hexadecimal_alphabet","get_encoding","hexadecimal_ascii_lowercase_sixteen_bits_alphabet","init","","intel_x86_32_encoding","into","","new","new_empty","new_handle","","pokered_charset_encoding","split_bytes_by_characters_representation","str","to_owned","","try_from","","try_into","","type_id","","uniffy_opcode_group","unknow_opcodes","uppercase_no_space_ascii_alphabet_encoding","vzip","","Decode","Encode","borrow","","borrow_mut","","clone_handle","","consume_handle","","deref","","deref_mut","","drop","","encode","from","","from_ascii_to_u8","from_u8_to_ascii","init","","into","","new_handle","","try_from","","try_into","","type_id","","vzip",""],"q":[[0,"cryptatools_core"],[3,"cryptatools_core::cryptanalysis"],[6,"cryptatools_core::cryptanalysis::common"],[7,"cryptatools_core::cryptanalysis::common::rsa"],[8,"cryptatools_core::cryptanalysis::custom"],[11,"cryptatools_core::cryptanalysis::custom::general_cryptanalysis_methods"],[14,"cryptatools_core::cryptanalysis::custom::general_cryptanalysis_methods::brute_force"],[15,"cryptatools_core::cryptanalysis::custom::general_cryptanalysis_methods::frequency_analysis"],[17,"cryptatools_core::cryptanalysis::custom::general_cryptanalysis_methods::frequency_analysis::coincidence_index"],[56,"cryptatools_core::cryptanalysis::custom::general_cryptanalysis_methods::frequency_analysis::distribution_algorithms"],[57,"cryptatools_core::cryptanalysis::custom::general_cryptanalysis_methods::frequency_analysis::distribution_algorithms::statistical"],[75,"cryptatools_core::cryptanalysis::custom::general_cryptanalysis_methods::hash_cryptanalysis"],[76,"cryptatools_core::cryptanalysis::custom::general_cryptanalysis_methods::hash_cryptanalysis::birthday_paradox"],[98,"cryptatools_core::cryptanalysis::custom::know_plaintext_attacks"],[99,"cryptatools_core::cryptanalysis::custom::know_plaintext_attacks::matsui_s_algorithm"],[100,"cryptatools_core::cryptanalysis::custom::know_plaintext_attacks::matsui_s_algorithm::algorithm_one"],[118,"cryptatools_core::cryptanalysis::plain_text_detector"],[138,"cryptatools_core::cryptography"],[140,"cryptatools_core::cryptography::classical"],[141,"cryptatools_core::cryptography::classical::encryption"],[144,"cryptatools_core::cryptography::classical::encryption::monoalphabetic_ciphers"],[145,"cryptatools_core::cryptography::classical::encryption::monoalphabetic_ciphers::caesar_number"],[166,"cryptatools_core::cryptography::classical::encryption::polyalphabetic_ciphers"],[167,"cryptatools_core::cryptography::classical::encryption::polyalphabetic_ciphers::vigenere"],[207,"cryptatools_core::cryptography::classical::encryption::transpositional_ciphers"],[208,"cryptatools_core::cryptography::classical::encryption::transpositional_ciphers::columnar_transposition"],[227,"cryptatools_core::cryptography::modern"],[229,"cryptatools_core::utils"],[231,"cryptatools_core::utils::alphabets"],[295,"cryptatools_core::utils::convert"],[330,"once_cell::sync"],[331,"uniffi_core::ffi::handle"],[332,"alloc::sync"],[333,"alloc::vec"],[334,"alloc::string"],[335,"core::result"],[336,"core::any"],[337,"std::collections::hash::map"],[338,"lingua::language"],[339,"core::option"],[340,"bimap::btree"],[341,"core::fmt"]],"i":"````````````````````AjA`1010101010101000111010101010101010``Bb0000000000000000``Bf00000000000000000000```Bj0000000000000000`Bl000000000000000000````````Cf0000000000000000000```CjCl101010101010101010101010100101010110``Cn00000000000000000````````Al0D`101001010101011010101100010011110110111011`001010101`1101``DhDj1010101010100100110101010101010","f":"```````````````````{{}b}{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{hh}0{h{{j{c}}}{}}0{l{{d{c}}}{}}0{l{{d{fc}}}{}}0{ln}0{cc{}}0{{{d{A`}}l{Ad{Ab}}}Af}{{{d{A`}}lAh}Af}{{{d{Aj}}{Ad{Ab}}}Af}{{{d{Aj}}Ah}Af}{{}l}0{{}c{}}0{{{j{Al}}}Aj}{{{j{Al}}}A`}{{{j{c}}}h{}}0{c{{An{e}}}{}{}}0{{}{{An{c}}}{}}0{dB`}0{{}c{}}0``{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{hh}{h{{j{c}}}{}}{l{{d{c}}}{}}{l{{d{fc}}}{}}{ln}{cc{}}{{{d{Bb}}{Ad{Ab}}}{{Bd{{Ad{Ab}}Af}}}}{{}l}{{}c{}}{AlBb}{{{j{c}}}h{}}{c{{An{e}}}{}{}}{{}{{An{c}}}{}}{dB`}{{}c{}}``{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{Bf}}BhBh}Bh}{{{d{Bf}}{Ad{Ab}}Af}Bh}{{{d{Bf}}{Ad{Ab}}Af}Af}2{hh}{h{{j{c}}}{}}{l{{d{c}}}{}}{l{{d{fc}}}{}}{ln}{{{d{Bf}}Bh}Bh}{cc{}}{{}l}{{}c{}}{{{j{Al}}}Bf}{{{j{c}}}h{}}{c{{An{e}}}{}{}}{{}{{An{c}}}{}}{dB`}{{}c{}}```{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{hh}{h{{j{c}}}{}}{l{{d{c}}}{}}{l{{d{fc}}}{}}{ln}?>={AlBj}<{{}n}<;:9`87{{BlAh{Ad{Bn}}}{{Cb{{Ad{{C`{BnAf}}}}}}}}7654{{BlAh{Ad{Bn}}}{{Cb{Bn}}}}4{cc{}}{{}l}{{}c{}}{{BlAh{Ad{Bn}}Af}Cd}{{}Bl}{{{j{c}}}h{}}{c{{An{e}}}{}{}}{{}{{An{c}}}{}}{dB`}{{}c{}}````````{Cfj}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{hh}{h{{j{c}}}{}}{{{d{Cf}}{Ad{Ab}}Ch}{{Ad{Ab}}}}{l{{d{c}}}{}}{l{{d{fc}}}{}}{ln}33{cc{}}{{}l}{{}c{}}{{{j{Al}}}Cf}{{{j{c}}}h{}}{c{{An{e}}}{}{}}{{}{{An{c}}}{}}{dB`}{{}c{}}```{CjAl}{Clj}{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{hh}0{h{{j{c}}}{}}0{l{{d{c}}}{}}0{l{{d{fc}}}{}}0{ln}0{{{d{Cj}}{Ad{Ab}}{Ad{{Ad{Ab}}}}}{{Ad{Ab}}}}{{{d{Cl}}{Ad{Ab}}{Ad{{Ad{Ab}}}}}{{Ad{Ab}}}}{cc{}}0{{}l}0{{}c{}}0{AlCj}{{{j{Al}}}Cl}{{{j{c}}}h{}}0{ClAd}{c{{An{e}}}{}{}}0{{}{{An{c}}}{}}0{dB`}0{CjAd}{{}c{}}0``{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{hh}{h{{j{c}}}{}}{{{d{Cn}}{Ad{Ab}}Ch}{{Ad{Ab}}}}{l{{d{c}}}{}}{l{{d{fc}}}{}}{ln}3{cc{}}{{}l}{{}c{}}{{{j{Al}}}Cn}{{{j{c}}}h{}}{c{{An{e}}}{}{}}{{}{{An{c}}}{}}{dB`}{{}c{}}``````{{}d}0{{{d{fAl}}}Al}0{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{D`Ad}{{{d{D`}}}D`}{{{d{Al}}}Al}{hh}0{{d{d{fc}}}n{}}0{{dAb}n}0{h{{j{c}}}{}}0{{{d{Al}}{Ad{Ab}}}{{Ad{D`}}}}{l{{d{c}}}{}}0{l{{d{fc}}}{}}0{ln}0{AlDb}{{{d{D`}}{d{D`}}}Cd}{{d{d{c}}}Cd{}}0{{{d{fAl}}}Al}{{{d{D`}}{d{fDd}}}Df}{cc{}}0{{}Al}{{{d{Al}}}{{Ad{D`}}}}1{{}l}05{{}c{}}0{{{Ad{D`}}}Al}4{{{j{c}}}h{}}08{{{d{Al}}{Ad{Ab}}}{{Ad{{Ad{Ab}}}}}}{D`Ah}{dc{}}0{c{{An{e}}}{}{}}0{{}{{An{c}}}{}}0{dB`}0{{{Ad{{Ad{Ab}}}}}{{Ad{Ab}}}}??{{}c{}}0``{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{hh}0{h{{j{c}}}{}}0{l{{d{c}}}{}}0{l{{d{fc}}}{}}0{ln}0{{{d{Al}}Ah}{{Ad{Ab}}}}{cc{}}0{Ah{{Ad{Ab}}}}{{{Ad{Ab}}}Ah}{{}l}0{{}c{}}0{{{j{c}}}h{}}0{c{{An{e}}}{}{}}0{{}{{An{c}}}{}}0{dB`}0{{}c{}}0","D":"Gl","p":[[5,"Lazy",330],[1,"reference",null,null,1],[0,"mut"],[5,"Handle",331],[5,"Arc",332,null,1],[1,"usize"],[1,"unit"],[5,"CoincidenceIndexGenerator",17],[1,"u8"],[5,"Vec",333],[1,"f64"],[5,"String",334],[5,"CoincidenceIndexGuesser",17],[5,"Alphabet",231],[6,"Result",335,null,1],[5,"TypeId",336],[5,"Statistical",57],[5,"HashMap",337],[5,"BirthdayParadox",76],[1,"u64"],[5,"AlgorithmOne",100],[5,"PlainTextDetector",118],[6,"Language",338],[1,"tuple",null,null,1],[6,"Option",339,null,1],[1,"bool"],[5,"CaesarNumberAlgorithm",145],[1,"u32"],[5,"Vigenere",167],[5,"VigenereNoTable",167],[5,"ColumnarTranspositionAlgorithm",208],[5,"Encoding",231],[5,"BiBTreeMap",340],[5,"Formatter",341],[8,"Result",341],[5,"Decode",295],[5,"Encode",295]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAwBJgAAAAMABgACAAoAAAAMABYAKQABAC0AFABEAAAARgAKAFQABABbAAAAXQAPAG4AAABwAAkAewADAIAAAACCAAAAhQALAJIAAACUAAMAmQACAJ8AAAChABgAuwAAAL4AAQDCABMA1wACANwAAADeAA4A7gAOAP4ABQAFAQIACQEAAA0BAAAPAQIAFAEPACUBEgA9AQEAQQEJAA==","P":[[20,"T"],[24,""],[26,"T"],[32,""],[34,"T"],[36,""],[42,"U"],[44,""],[46,"T"],[48,"U,T"],[50,"U"],[52,""],[54,"V"],[58,"T"],[60,""],[61,"T"],[64,""],[65,"T"],[66,""],[68,"U"],[69,""],[70,"T"],[71,"U,T"],[72,"U"],[73,""],[74,"V"],[77,"T"],[79,""],[84,"T"],[87,""],[89,"T"],[90,""],[91,"U"],[92,""],[93,"T"],[94,"U,T"],[95,"U"],[96,""],[97,"V"],[101,"T"],[103,""],[104,"T"],[107,""],[108,"T"],[109,""],[110,"U"],[111,""],[112,"T"],[113,""],[114,"U,T"],[115,"U"],[116,""],[117,"V"],[119,"T"],[121,""],[123,"T"],[126,""],[128,"T"],[129,""],[130,"U"],[131,""],[133,"T"],[134,"U,T"],[135,"U"],[136,""],[137,"V"],[146,""],[147,"T"],[149,""],[150,"T"],[151,""],[152,"T"],[154,""],[157,"T"],[158,""],[159,"U"],[160,""],[161,"T"],[162,"U,T"],[163,"U"],[164,""],[165,"V"],[169,""],[171,"T"],[175,""],[177,"T"],[183,""],[187,"T"],[189,""],[191,"U"],[193,""],[195,"T"],[197,""],[198,"U,T"],[200,"U"],[202,""],[205,"V"],[209,"T"],[211,""],[212,"T"],[213,""],[214,"T"],[216,""],[218,"T"],[219,""],[220,"U"],[221,""],[222,"T"],[223,"U,T"],[224,"U"],[225,""],[226,"V"],[233,""],[237,"T"],[241,""],[246,"T"],[248,""],[250,"T"],[252,""],[253,"T"],[257,""],[261,"K"],[263,""],[265,"T"],[267,""],[273,"U"],[275,""],[277,"T"],[279,""],[282,"T"],[284,"U,T"],[286,"U"],[288,""],[293,"V"],[297,"T"],[301,""],[303,"T"],[309,""],[312,"T"],[314,""],[318,"U"],[320,"T"],[322,"U,T"],[324,"U"],[326,""],[328,"V"]]}],["uniffi_bindgen",{"t":"H","n":["main"],"q":[[0,"uniffi_bindgen"]],"i":"`","f":"{{}b}","D":"`","p":[[1,"unit"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA=","P":[]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[11998,189]}